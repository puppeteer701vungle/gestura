{"version":3,"sources":["dist/gestura.js"],"names":["global","factory","exports","module","define","amd","gestura","this","trigger","el","event","data","document","querySelector","createEvent","evtObj","initEvent","dispatchEvent","console","error","window","navigator","pointerEnabled","eventStart","eventEnd","eventMove","eventCancel","msPointerEnabled","gestures","touchTimeout","swipeTimeout","tapTimeout","longTapTimeout","now","delta","body","touch","singleTapDelay","parentIfText","node","parentNode","swipeDirection","x1","x2","y1","y2","Math","abs","longTap","last","err","cancelLongTap","clearTimeout","cancelAll","test","userAgent","addEventListener","e","Date","target","length","isDoubleTap","setTimeout","move","direction","preventDefault"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.gestura = {})));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * @type {string} eventStart\n   */\n\n  /**\n   * @type {string} eventEnd\n   */\n\n  /**\n   * @type {string} eventMove\n   */\n\n  /**\n   * @type {string} eventCancel\n   */\n\n\n  // Pointer events for IE11 and MSEdge:\n  if (window.navigator.pointerEnabled) {\n    exports.eventStart = 'pointerdown';\n    exports.eventEnd = 'pointerup';\n    exports.eventMove = 'pointermove';\n    exports.eventCancel = 'pointercancel';\n\n    // Pointer events for IE10 and WP8:\n  } else if (window.navigator.msPointerEnabled) {\n    exports.eventStart = 'MSPointerDown';\n    exports.eventEnd = 'MSPointerUp';\n    exports.eventMove = 'MSPointerMove';\n    exports.eventCancel = 'MSPointerCancel';\n\n    // Touch events for iOS & Android:\n  } else if ('ontouchstart' in window) {\n    exports.eventStart = 'touchstart';\n    exports.eventEnd = 'touchend';\n    exports.eventMove = 'touchmove';\n    exports.eventCancel = 'touchcancel';\n\n    // Mouse events for desktop:\n  } else {\n    exports.eventStart = 'mousedown';\n    exports.eventEnd = 'mouseup';\n    exports.eventMove = 'mousemove';\n    exports.eventCancel = 'mouseout';\n  }\n\n  /**\n   * Fire a gesture on an element and pass it some optional data.\n   * @param {Element} el\n   * @param {string} event\n   * @param {*} [data]\n   */\n  function trigger(el, event, data) {\n    if (!event) {\n      console.error('No event was provided. You do need to provide one.');\n      return\n    }\n    if (typeof el === 'string') el = document.querySelector(el);\n    if (document.createEvent) {\n      var evtObj = document.createEvent('Events');\n      evtObj.initEvent(event, true, false);\n      evtObj['data'] = data;\n      el.dispatchEvent(evtObj);\n    }\n  }\n\n  /**\n   * Enable gestures in the browser.\n   */\n  var gestures = function() {\n    var touch = {};\n    var touchTimeout;\n    var swipeTimeout;\n    var tapTimeout;\n    var longTapDelay = 750;\n    var singleTapDelay = 150;\n    var gestureLength = 20;\n    if (/android/gim.test(navigator.userAgent)) singleTapDelay = 200;\n    var longTapTimeout;\n\n    /**\n     * @param {Node} node\n     */\n    function parentIfText(node) {\n      return 'tagName' in node ? node : node.parentNode\n    }\n\n    /**\n     * @param {number} x1\n     * @param {number} x2\n     * @param {number} y1\n     * @param {number} y2\n     */\n    function swipeDirection(x1, x2, y1, y2) {\n      return Math.abs(x1 - x2) >= Math.abs(y1 - y2)\n        ? x1 - x2 > 0\n          ? 'left'\n          : 'right'\n        : y1 - y2 > 0\n          ? 'up'\n          : 'down'\n    }\n\n    function longTap() {\n      longTapTimeout = null;\n      if (touch.last) {\n        try {\n          if (touch && touch.el) {\n            trigger(touch.el, 'longtap');\n            touch = {};\n          }\n        } catch (err) {}\n      }\n    }\n\n    function cancelLongTap() {\n      if (longTapTimeout) clearTimeout(longTapTimeout);\n      longTapTimeout = null;\n    }\n\n    function cancelAll() {\n      if (touchTimeout) clearTimeout(touchTimeout);\n      if (tapTimeout) clearTimeout(tapTimeout);\n      if (swipeTimeout) clearTimeout(swipeTimeout);\n      if (longTapTimeout) clearTimeout(longTapTimeout);\n      touchTimeout = tapTimeout = swipeTimeout = longTapTimeout = null;\n      touch = {};\n    }\n  (function() {\n      var now;\n      var delta;\n      var body = document.body;\n\n      /**\n       * Capture start of event:\n       */\n      body.addEventListener(exports.eventStart, function(e) {\n        now = Date.now();\n        delta = now - (touch.last || now);\n\n        if (exports.eventStart === 'mousedown') {\n          touch.el = parentIfText(/** @type{Node} */ (e.target));\n          if (e.target['nodeName'] === 'ripple') {\n            touch.el = e.target['parentNode'];\n          }\n          touchTimeout && clearTimeout(touchTimeout);\n          touch.x1 = e['pageX'];\n          touch.y1 = e['pageY'];\n\n          /**\n           * Detect two or more finger gestures:\n           */\n        } else {\n          if (e['touches'].length === 1) {\n            if (!!e.target['disabled']) return\n            touch.el = parentIfText(e['touches'][0].target);\n            touchTimeout && clearTimeout(touchTimeout);\n            touch.x1 = e['touches'][0]['pageX'];\n            touch.y1 = e['touches'][0]['pageY'];\n          }\n        }\n\n        if (delta > 0 && delta <= 450) {\n          touch.isDoubleTap = true;\n        }\n        touch.last = now;\n        longTapTimeout = setTimeout(longTap, longTapDelay);\n      });\n\n      /**\n       * Capture event move:\n       */\n      body.addEventListener(exports.eventMove, function(e) {\n        cancelLongTap();\n        if (exports.eventMove === 'mousemove') {\n          touch.x2 = e['pageX'];\n          touch.y2 = e['pageY'];\n        } else {\n          /**\n           * One finger gesture:\n           */\n          if (e['touches'].length === 1) {\n            touch.x2 = e['touches'][0]['pageX'];\n            touch.y2 = e['touches'][0]['pageY'];\n            touch.move = true;\n          } else if (e['touches'].length === 2) {\n            // TODO: pinch - rotate gestures?\n          }\n        }\n      });\n\n      /**\n       * Capture event end:\n       */\n      body.addEventListener(exports.eventEnd, function(e) {\n        cancelLongTap();\n        if (!!touch.el) {\n          /**\n           * Swipe detection:\n           */\n          if (\n            (touch.x2 && Math.abs(touch.x1 - touch.x2) > gestureLength) ||\n            (touch.y2 && Math.abs(touch.y1 - touch.y2) > gestureLength)\n          ) {\n            swipeTimeout = setTimeout(function() {\n              if (touch && touch.el) {\n                var direction = swipeDirection(\n                  touch.x1,\n                  touch.x2,\n                  touch.y1,\n                  touch.y2\n                );\n                trigger(touch.el, 'swipe', direction);\n                trigger(\n                  touch.el,\n                  'swipe' + swipeDirection(touch.x1, touch.x2, touch.y1, touch.y2)\n                );\n                touch = {};\n              }\n            }, 0);\n\n            /**\n             * Normal tap:\n             */\n          } else if ('last' in touch) {\n            /**\n             * Delay by one tick so we can cancel the 'tap' event if 'scroll' fires:\n             */\n            tapTimeout = setTimeout(function() {\n              /**\n               * Trigger double tap immediately:\n               */\n              if (touch && touch.isDoubleTap) {\n                if (touch && touch.el) {\n                  trigger(touch.el, 'dbltap');\n                  e.preventDefault();\n                  touch = {};\n                }\n              } else {\n                /**\n                 * Trigger tap after singleTapDelay:\n                 */\n                touchTimeout = setTimeout(function() {\n                  touchTimeout = null;\n                  if (touch && touch.el && !touch.move) {\n                    trigger(touch.el, 'tap');\n                    touch = {};\n                  } else {\n                    /**\n                     * Touch moved so cancel tap:\n                     */\n                    cancelAll();\n                  }\n                }, singleTapDelay);\n              }\n            }, 0);\n          }\n        } else {\n          return\n        }\n      });\n      body.addEventListener('touchcancel', cancelAll);\n    })();\n  };\n\n  gestures();\n\n  exports.trigger = trigger;\n  exports.gestures = gestures;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=gestura.js.map\n"]}